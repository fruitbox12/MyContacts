/*
Deployment script for SQLContactsDBDylan

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SQLContactsDBDylan"
:setvar DefaultFilePrefix "SQLContactsDBDylan"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[contacts]...';


GO
CREATE TABLE [dbo].[contacts] (
    [id]          INT            IDENTITY (1, 1) NOT NULL,
    [first_name]  NVARCHAR (100) NOT NULL,
    [middle_name] NVARCHAR (100) NULL,
    [last_name]   NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[contacts_email_addresses]...';


GO
CREATE TABLE [dbo].[contacts_email_addresses] (
    [id]         INT NOT NULL,
    [contact_id] INT NOT NULL,
    [email_id]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[contacts_email_addresses].[IX_contact_email]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_contact_email]
    ON [dbo].[contacts_email_addresses]([email_id] ASC);


GO
PRINT N'Creating [dbo].[contacts_phone_numbers]...';


GO
CREATE TABLE [dbo].[contacts_phone_numbers] (
    [id]              INT IDENTITY (1, 1) NOT NULL,
    [contact_id]      INT NOT NULL,
    [phone_number_id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[contacts_phone_numbers].[IX_contact_phone_numbers]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_contact_phone_numbers]
    ON [dbo].[contacts_phone_numbers]([phone_number_id] ASC);


GO
PRINT N'Creating [dbo].[email_addresses]...';


GO
CREATE TABLE [dbo].[email_addresses] (
    [id]            INT            IDENTITY (1, 1) NOT NULL,
    [email_address] NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[email_addresses].[IX_email_addresses_email_address]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_email_addresses_email_address]
    ON [dbo].[email_addresses]([email_address] ASC);


GO
PRINT N'Creating [dbo].[phone_numbers]...';


GO
CREATE TABLE [dbo].[phone_numbers] (
    [id]           INT           IDENTITY (1, 1) NOT NULL,
    [phone_number] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[phone_numbers].[IX_phone_numbers_phone_number]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_phone_numbers_phone_number]
    ON [dbo].[phone_numbers]([phone_number] ASC);


GO
PRINT N'Creating [dbo].[FK_contact_email_addresses_contacts]...';


GO
ALTER TABLE [dbo].[contacts_email_addresses]
    ADD CONSTRAINT [FK_contact_email_addresses_contacts] FOREIGN KEY ([contact_id]) REFERENCES [dbo].[contacts] ([id]);


GO
PRINT N'Creating [dbo].[FK_contact_email_addresses_email_id]...';


GO
ALTER TABLE [dbo].[contacts_email_addresses]
    ADD CONSTRAINT [FK_contact_email_addresses_email_id] FOREIGN KEY ([email_id]) REFERENCES [dbo].[email_addresses] ([id]);


GO
PRINT N'Creating [dbo].[FK_contacts_phone_numbers_contacts]...';


GO
ALTER TABLE [dbo].[contacts_phone_numbers]
    ADD CONSTRAINT [FK_contacts_phone_numbers_contacts] FOREIGN KEY ([contact_id]) REFERENCES [dbo].[contacts] ([id]);


GO
PRINT N'Creating [dbo].[FK_contact_phone_numbers_phone_numbers]...';


GO
ALTER TABLE [dbo].[contacts_phone_numbers]
    ADD CONSTRAINT [FK_contact_phone_numbers_phone_numbers] FOREIGN KEY ([phone_number_id]) REFERENCES [dbo].[phone_numbers] ([id]);


GO
PRINT N'Creating [dbo].[CK_phone_numbers_phone_number]...';


GO
ALTER TABLE [dbo].[phone_numbers]
    ADD CONSTRAINT [CK_phone_numbers_phone_number] CHECK (phone_number not like '%[^0-9]%');


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1986137e-632a-4276-8566-4269a8ac58e1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1986137e-632a-4276-8566-4269a8ac58e1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fd1cc7af-3d99-4ca6-ab6c-b5b262c941bd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fd1cc7af-3d99-4ca6-ab6c-b5b262c941bd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '01e1c20e-aecc-4a2e-aa5b-3378a4f9c1ab')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('01e1c20e-aecc-4a2e-aa5b-3378a4f9c1ab')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '17be61db-6468-43af-93ae-63c68a5411a2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('17be61db-6468-43af-93ae-63c68a5411a2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '170d7162-3d01-4443-b990-1faf5fef3784')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('170d7162-3d01-4443-b990-1faf5fef3784')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b5d23569-7a85-4044-89a6-d7d636aaeac5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b5d23569-7a85-4044-89a6-d7d636aaeac5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b954a0e5-3e49-41bb-8120-1bf0d2ff7071')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b954a0e5-3e49-41bb-8120-1bf0d2ff7071')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f9e5613d-ac39-43e8-b8ed-7ebf815e2486')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f9e5613d-ac39-43e8-b8ed-7ebf815e2486')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
